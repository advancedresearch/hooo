fn liar_not : (!a)^a & a^(!a)  ->  false {
    use hooo_imply_elim;
    
    x : (!a)^a;
    y : a^(!a);

    let x4 = hooo_imply_elim(x) : !a;
    let x5 = y(x4) : a;
    let r = x4(x5) : false;
    return r;
}

fn liar_para : (false^a)^a & a^(false^a)  ->  false {
    use pow_elim;

    x : (false^a)^a;
    y : a^(false^a);
    
    let x5 = pow_elim(x) : false^a;
    let x6 = y(x5) : a;
    let r = x5(x6) : false;
    return r;
}

